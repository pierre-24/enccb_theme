<?php

use Drupal\block\Entity\Block;

/* --- THEME VARIABLES: */

function enccb_theme_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  // Contact info
  $form['theme_settings'] = array(
    '#type' => 'details',
    '#title' => t('Specific settings'),
    '#description' => t('Specific theme settings'),
    '#open' => TRUE,

    // twitter
    'home_page_id' => array(
      '#type'          => 'number',
      '#title'         => t('Home page'),
      '#default_value' => theme_get_setting('home_page_id'),
      '#description'   => t("Id of the home page node"),
    ),
  );
}

function enccb_theme_preprocess_page(&$variables) {
  $vars = array('home_page_id');
  foreach($vars as $var) {
    $variables[$var] = theme_get_setting($var);
  }
}

function enccb_theme_preprocess_block(&$variables) {
    // add region to every block and its child
    if (isset($variables['elements']['#id'])) {
        $region = Block::load($variables['elements']['#id'])->getRegion();
        $variables['content']['#attributes']['region'] = $region;
        $variables['attributes']['region'] = $region;
    }

    // add the Bootstrap class to main navbar
    if($variables['attributes']['id'] == 'block-enccb-theme-main-menu') {
        $variables['attributes']['class'][] = 'navbar';
        $variables['attributes']['class'][] = 'navbar-expand-lg';
        $variables['attributes']['class'][] = 'navbar-dark';
    }
}

/* --- MENU */
function enccb_theme_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
    // add suggestion based on region
    if(isset($variables['attributes']['region'])) {
        $suggestions[] = $variables['theme_hook_original'].'__'.$variables['attributes']['region'];
    }
}

/* --- FORMS */
function enccb_theme_preprocess_input(&$variables) {
    $type = $variables['element']['#type'];

    // add the bootstrap class to form
    if(in_array($type, array('textfield', 'password', 'email', 'search', 'url')))
        $variables['attributes']['class'][] = 'form-control';
    elseif($type == 'checkbox')
        $variables['attributes']['class'][] = 'form-check-input';
    elseif($type == 'submit') {
        $variables['attributes']['class'][] = 'btn';
        $variables['attributes']['class'][] = 'btn-primary';
    }
}

function enccb_theme_preprocess_form_element(&$variables) {
    $variables['attributes']['class'][] = 'mb-3';
    $variables['description']['attributes']['class'][] = 'form-text';
}

function enccb_theme_preprocess_textarea(&$variables) {
    $variables['attributes']['class'][] = 'form-control';
}

function enccb_theme_preprocess_form_element_label(&$variables) {
    // set form-label to every label
    $variables['attributes']['class'][] = 'form-label';
}

/* --- NODE: */
function enccb_theme_preprocess_node(&$variables) {
    if($variables['view_mode'] == 'full') {
        $variables['attributes']['class'][] = 'full';

        // switch some field to the left column
        $TO_SWITCH = array('field_interviewee');
        $right_column = array();
        foreach($TO_SWITCH as $what) {
            if(isset($variables['content'][$what])) {
                $right_column[$what] = $variables['content'][$what];
                unset($variables['content'][$what]);
            }
        }

        // save
        $variables['right_column_content'] = $right_column;
    }
}

function enccb_theme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
    // add a suggestion for homepage
    if($variables['elements']['#node']->id() == strval(theme_get_setting('home_page_id'))) {
        $suggestions[] = 'node__homepage';
    }
}

function enccb_theme_preprocess_field(&$variables) {
    // add a class to the field
    $variables['attributes']['class'] = str_replace('_', '-', $variables['field_name']);
}

/* --- VIEWS */
function enccb_theme_preprocess_views_view(&$variables) {
    // add view mode as a class
    $variables['attributes']['class'][] = 'view-mode-'.$variables['view']->rowPlugin->options['view_mode'];
}
